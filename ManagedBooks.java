package librarysystem;
import java.awt.CardLayout;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

public class ManagedBooks extends javax.swing.JFrame {
    CardLayout cardLayout;
    Connection con = connectLibrary.connecting(); 
    ResultSet rs;
    PreparedStatement pst;
        
    public ManagedBooks() {
        initComponents();
        connectLibrary.connecting(); 
        displayTable();
        cardLayout = (CardLayout) (THREEPANELS.getLayout());
        cardLayout.show(THREEPANELS, "manageBooksPANEL"); 
        isbnADD.setEnabled(false);
        titleADD.setEnabled(false);
        authorADD.setEnabled(false);
        yearADD.setEnabled(false);
        genreADD.setEnabled(false);
        copyADD.setEnabled(false);
        publisherADD.setEnabled(false);
        addNewBTN.setEnabled(false);
        clearNewBTN.setEnabled(false);           
        isbnDELETE.setEnabled(false);
        titleDELETE.setEnabled(false);
        authorDELETE.setEnabled(false);
        yearDELETE.setEnabled(false);
        genreDELETE.setEnabled(false);
        copyDELETE.setEnabled(false);
        deleteBookBTN.setEnabled(false);
        clearDeleteBTN.setEnabled(false); 
        searchDeleteBTN.setEnabled(false);
        publisherDELETE.setEnabled(false);
        idDelField.setEnabled(false);
        titleDelField.setEnabled(false);
        authorDelField.setEnabled(false);
        yearDelField.setEnabled(false);
        publisherDelField.setEnabled(false);
        genreDelField.setEnabled(false);
        copyDelField.setEnabled(false);   
        DELETEBOOKBTN.setEnabled(false);
        DELCLEARBTN.setEnabled(false);
        searchDELETEBOOK.setEnabled(false);
    }
    private void displayTable (){
        try{ 
            //con = DriverManager.getConnection("jdbc:derby://localhost:1527/LibraryManagementSystem", "group1", "librarysystem");
            String sql = "SELECT * FROM booksavailable"; 
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            listOfBooksTABLE.setModel(DbUtils.resultSetToTableModel(rs));
        }catch (SQLException e){
            e.printStackTrace();
        }
    }
    private void filterGenre (String genre){
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>((DefaultTableModel) listOfBooksTABLE.getModel());
        listOfBooksTABLE.setRowSorter(sorter);
        
        if (!"ALL GENRE".equals(genre)){
            sorter.setRowFilter(RowFilter.regexFilter(genre));
        }else{
            listOfBooksTABLE.setRowSorter(sorter);
        }   
    }
    private void autoUpdateTable(){ 
        try{
            //con = DriverManager.getConnection("jdbc:derby://localhost:1527/LibraryManagementSystem", "group1", "librarysystem");
            String table = "SELECT * FROM booksavailable";
            pst = con.prepareStatement(table);
            rs = pst.executeQuery();
            listOfBooksTABLE.setModel(DbUtils.resultSetToTableModel(rs));
        }catch (SQLException e){
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        browseGenreBTN = new javax.swing.JButton();
        allBooksBTN = new javax.swing.JButton();
        THREEPANELS = new javax.swing.JPanel();
        allBooksPANEL = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        selectGENRE = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        listOfBooksTABLE = new javax.swing.JTable();
        manageBooksPANEL = new javax.swing.JPanel();
        deleteToggle = new javax.swing.JToggleButton();
        addToggle = new javax.swing.JToggleButton();
        copyADD = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        genreADD = new javax.swing.JTextField();
        yearADD = new javax.swing.JTextField();
        authorADD = new javax.swing.JTextField();
        titleADD = new javax.swing.JTextField();
        isbnADD = new javax.swing.JTextField();
        clearNewBTN = new javax.swing.JButton();
        addNewBTN = new javax.swing.JButton();
        clearDeleteBTN = new javax.swing.JButton();
        deleteBookBTN = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        copyDELETE = new javax.swing.JTextField();
        genreDELETE = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        publisherADD = new javax.swing.JTextField();
        searchDeleteBTN = new javax.swing.JButton();
        isbnDELETE = new javax.swing.JTextField();
        titleDELETE = new javax.swing.JTextField();
        authorDELETE = new javax.swing.JTextField();
        yearDELETE = new javax.swing.JTextField();
        copyDelField = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        searchDELETEBOOK = new javax.swing.JButton();
        delToggleBTN = new javax.swing.JToggleButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        titleDelField = new javax.swing.JTextField();
        publisherDELETE = new javax.swing.JTextField();
        authorDelField = new javax.swing.JTextField();
        yearDelField = new javax.swing.JTextField();
        publisherDelField = new javax.swing.JTextField();
        genreDelField = new javax.swing.JTextField();
        idDelField = new javax.swing.JTextField();
        DELCLEARBTN = new javax.swing.JButton();
        DELETEBOOKBTN = new javax.swing.JButton();
        BG3 = new javax.swing.JLabel();
        BG7 = new javax.swing.JLabel();
        BG8 = new javax.swing.JLabel();
        home = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        BGGG = new javax.swing.JLabel();
        INVIid = new javax.swing.JTextField();
        INVIname = new javax.swing.JTextField();
        INVIbday = new javax.swing.JTextField();
        numberBetween = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MANAGE BOOKS");
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        browseGenreBTN.setBackground(new java.awt.Color(206, 18, 18));
        browseGenreBTN.setFont(new java.awt.Font("Dubai", 1, 18)); // NOI18N
        browseGenreBTN.setForeground(new java.awt.Color(255, 255, 255));
        browseGenreBTN.setText("Manage Books");
        browseGenreBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseGenreBTNActionPerformed(evt);
            }
        });
        jPanel1.add(browseGenreBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 250, 650, 40));

        allBooksBTN.setBackground(new java.awt.Color(206, 18, 18));
        allBooksBTN.setFont(new java.awt.Font("Dubai", 1, 18)); // NOI18N
        allBooksBTN.setForeground(new java.awt.Color(255, 255, 255));
        allBooksBTN.setText("List of Books");
        allBooksBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allBooksBTNActionPerformed(evt);
            }
        });
        jPanel1.add(allBooksBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 250, 640, 40));

        THREEPANELS.setLayout(new java.awt.CardLayout());

        allBooksPANEL.setBackground(new java.awt.Color(255, 255, 255));
        allBooksPANEL.setName(""); // NOI18N
        allBooksPANEL.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("SELECT BOOK GENRE");
        allBooksPANEL.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 10, 260, 40));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/solid red.png"))); // NOI18N
        allBooksPANEL.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1270, 40));

        selectGENRE.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        selectGENRE.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALL GENRE", "ACADEMIC TEXTBOOK", "CLASSICS", "COMEDY", "FANTASY", "HISTORY", "HORROR", "LITERARY FICTION", "GRAPHIC NOVEL", "MYSTERY", "ROMANCE", "SCIENCE FICTION", "SHORT STORIES" }));
        selectGENRE.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                selectGENREItemStateChanged(evt);
            }
        });
        allBooksPANEL.add(selectGENRE, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 70, 210, 30));

        listOfBooksTABLE.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        listOfBooksTABLE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BOOKID", "BOOKTITLE", "AUTHORNAME", "PUBLISHEDYEAR", "GENRE", "COPIES"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listOfBooksTABLE.setEnabled(false);
        listOfBooksTABLE.setGridColor(new java.awt.Color(255, 153, 153));
        listOfBooksTABLE.setRowHeight(25);
        listOfBooksTABLE.setSelectionBackground(new java.awt.Color(206, 18, 18));
        jScrollPane1.setViewportView(listOfBooksTABLE);

        allBooksPANEL.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 1270, 410));

        THREEPANELS.add(allBooksPANEL, "allBooksPANEL");

        manageBooksPANEL.setBackground(new java.awt.Color(255, 255, 255));
        manageBooksPANEL.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        deleteToggle.setBackground(new java.awt.Color(206, 18, 18));
        deleteToggle.setFont(new java.awt.Font("Dubai", 1, 24)); // NOI18N
        deleteToggle.setForeground(new java.awt.Color(255, 255, 255));
        deleteToggle.setText("Archive Book");
        deleteToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteToggleActionPerformed(evt);
            }
        });
        manageBooksPANEL.add(deleteToggle, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 30, -1, 40));

        addToggle.setBackground(new java.awt.Color(206, 18, 18));
        addToggle.setFont(new java.awt.Font("Dubai", 1, 24)); // NOI18N
        addToggle.setForeground(new java.awt.Color(255, 255, 255));
        addToggle.setText("Add New Book");
        addToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToggleActionPerformed(evt);
            }
        });
        manageBooksPANEL.add(addToggle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, -1, 40));

        copyADD.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        manageBooksPANEL.add(copyADD, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 340, 190, 30));

        jLabel1.setFont(new java.awt.Font("Dubai", 0, 20)); // NOI18N
        jLabel1.setText("Available Copy:");
        manageBooksPANEL.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 150, 30));

        jLabel2.setFont(new java.awt.Font("Dubai", 0, 20)); // NOI18N
        jLabel2.setText("Book ID:");
        manageBooksPANEL.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 80, 30));

        jLabel3.setFont(new java.awt.Font("Dubai", 0, 20)); // NOI18N
        jLabel3.setText("Genre:");
        manageBooksPANEL.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, 100, 30));

        jLabel4.setFont(new java.awt.Font("Dubai", 0, 20)); // NOI18N
        jLabel4.setText("Author Name:");
        manageBooksPANEL.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 150, 30));

        jLabel5.setFont(new java.awt.Font("Dubai", 0, 20)); // NOI18N
        jLabel5.setText("Book Title:");
        manageBooksPANEL.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, 120, 30));

        jLabel6.setFont(new java.awt.Font("Dubai", 0, 20)); // NOI18N
        jLabel6.setText("Publisher:");
        manageBooksPANEL.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, 160, 30));

        genreADD.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        manageBooksPANEL.add(genreADD, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 300, 190, 30));

        yearADD.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        yearADD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                yearADDKeyPressed(evt);
            }
        });
        manageBooksPANEL.add(yearADD, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, 190, 30));

        authorADD.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        manageBooksPANEL.add(authorADD, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, 190, 30));

        titleADD.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        manageBooksPANEL.add(titleADD, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 140, 190, 30));

        isbnADD.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        isbnADD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                isbnADDKeyPressed(evt);
            }
        });
        manageBooksPANEL.add(isbnADD, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, 190, 30));

        clearNewBTN.setBackground(new java.awt.Color(255, 255, 255));
        clearNewBTN.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        clearNewBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/es.png"))); // NOI18N
        clearNewBTN.setText("Clear");
        clearNewBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearNewBTNActionPerformed(evt);
            }
        });
        manageBooksPANEL.add(clearNewBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 430, 140, 40));

        addNewBTN.setBackground(new java.awt.Color(255, 255, 255));
        addNewBTN.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        addNewBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/as1.png"))); // NOI18N
        addNewBTN.setText("Add Book");
        addNewBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewBTNActionPerformed(evt);
            }
        });
        manageBooksPANEL.add(addNewBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 430, 140, 40));

        clearDeleteBTN.setBackground(new java.awt.Color(255, 255, 255));
        clearDeleteBTN.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        clearDeleteBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/es.png"))); // NOI18N
        clearDeleteBTN.setText("Clear");
        clearDeleteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearDeleteBTNActionPerformed(evt);
            }
        });
        manageBooksPANEL.add(clearDeleteBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 430, 140, 40));

        deleteBookBTN.setBackground(new java.awt.Color(255, 255, 255));
        deleteBookBTN.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        deleteBookBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/ar1.png"))); // NOI18N
        deleteBookBTN.setText("Archive Book");
        deleteBookBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBookBTNActionPerformed(evt);
            }
        });
        manageBooksPANEL.add(deleteBookBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 430, -1, 40));

        jLabel7.setFont(new java.awt.Font("Dubai", 0, 20)); // NOI18N
        jLabel7.setText("Available Copy:");
        manageBooksPANEL.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 340, 150, 30));

        copyDELETE.setEditable(false);
        copyDELETE.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        manageBooksPANEL.add(copyDELETE, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 340, 190, 30));

        genreDELETE.setEditable(false);
        genreDELETE.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        manageBooksPANEL.add(genreDELETE, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 300, 190, 30));

        jLabel8.setFont(new java.awt.Font("Dubai", 0, 20)); // NOI18N
        jLabel8.setText("Genre:");
        manageBooksPANEL.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 300, 100, 30));

        jLabel9.setFont(new java.awt.Font("Dubai", 0, 20)); // NOI18N
        jLabel9.setText("Published Year:");
        manageBooksPANEL.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 220, 160, 30));

        jLabel10.setFont(new java.awt.Font("Dubai", 0, 20)); // NOI18N
        jLabel10.setText("Author Name:");
        manageBooksPANEL.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 180, 150, 30));

        jLabel11.setFont(new java.awt.Font("Dubai", 0, 20)); // NOI18N
        jLabel11.setText("Book Title:");
        manageBooksPANEL.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 140, 120, 30));

        jLabel12.setFont(new java.awt.Font("Dubai", 0, 20)); // NOI18N
        jLabel12.setText("Book ID:");
        manageBooksPANEL.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 100, 90, 30));

        publisherADD.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        manageBooksPANEL.add(publisherADD, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 260, 190, 30));

        searchDeleteBTN.setBackground(new java.awt.Color(255, 255, 255));
        searchDeleteBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/searchIcon1.png"))); // NOI18N
        searchDeleteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchDeleteBTNActionPerformed(evt);
            }
        });
        manageBooksPANEL.add(searchDeleteBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 90, 40, 40));

        isbnDELETE.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        isbnDELETE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                isbnDELETEKeyPressed(evt);
            }
        });
        manageBooksPANEL.add(isbnDELETE, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 100, 190, 30));

        titleDELETE.setEditable(false);
        titleDELETE.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        manageBooksPANEL.add(titleDELETE, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 140, 190, 30));

        authorDELETE.setEditable(false);
        authorDELETE.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        manageBooksPANEL.add(authorDELETE, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 180, 190, 30));

        yearDELETE.setEditable(false);
        yearDELETE.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        manageBooksPANEL.add(yearDELETE, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 220, 190, 30));

        copyDelField.setEditable(false);
        copyDelField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        manageBooksPANEL.add(copyDelField, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 340, 190, 30));

        jLabel20.setFont(new java.awt.Font("Dubai", 0, 20)); // NOI18N
        jLabel20.setText("Book ID:");
        manageBooksPANEL.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 100, 80, 30));

        jLabel21.setFont(new java.awt.Font("Dubai", 0, 20)); // NOI18N
        jLabel21.setText("Book Title:");
        manageBooksPANEL.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 140, 120, 30));

        jLabel22.setFont(new java.awt.Font("Dubai", 0, 20)); // NOI18N
        jLabel22.setText("Author Name:");
        manageBooksPANEL.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 180, 150, 30));

        jLabel23.setFont(new java.awt.Font("Dubai", 0, 20)); // NOI18N
        jLabel23.setText("Published Year:");
        manageBooksPANEL.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 220, 160, 30));

        jLabel24.setFont(new java.awt.Font("Dubai", 0, 20)); // NOI18N
        jLabel24.setText("Publisher:");
        manageBooksPANEL.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 260, 160, 30));

        jLabel25.setFont(new java.awt.Font("Dubai", 0, 20)); // NOI18N
        jLabel25.setText("Genre:");
        manageBooksPANEL.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 300, 100, 30));

        jLabel26.setFont(new java.awt.Font("Dubai", 0, 20)); // NOI18N
        jLabel26.setText("Available Copy:");
        manageBooksPANEL.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 340, 150, 30));

        searchDELETEBOOK.setBackground(new java.awt.Color(255, 255, 255));
        searchDELETEBOOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/searchIcon1.png"))); // NOI18N
        searchDELETEBOOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchDELETEBOOKActionPerformed(evt);
            }
        });
        manageBooksPANEL.add(searchDELETEBOOK, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 90, 40, 40));

        delToggleBTN.setBackground(new java.awt.Color(206, 18, 18));
        delToggleBTN.setFont(new java.awt.Font("Dubai", 1, 24)); // NOI18N
        delToggleBTN.setForeground(new java.awt.Color(255, 255, 255));
        delToggleBTN.setText("Delete Book");
        delToggleBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delToggleBTNActionPerformed(evt);
            }
        });
        manageBooksPANEL.add(delToggleBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 30, 180, 40));

        jLabel16.setFont(new java.awt.Font("Dubai", 0, 20)); // NOI18N
        jLabel16.setText("Published Year:");
        manageBooksPANEL.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 160, 30));

        jLabel17.setFont(new java.awt.Font("Dubai", 0, 20)); // NOI18N
        jLabel17.setText("Publisher:");
        manageBooksPANEL.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 260, 160, 30));

        titleDelField.setEditable(false);
        titleDelField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        manageBooksPANEL.add(titleDelField, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 140, 190, 30));

        publisherDELETE.setEditable(false);
        publisherDELETE.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        manageBooksPANEL.add(publisherDELETE, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 260, 190, 30));

        authorDelField.setEditable(false);
        authorDelField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        manageBooksPANEL.add(authorDelField, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 180, 190, 30));

        yearDelField.setEditable(false);
        yearDelField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        manageBooksPANEL.add(yearDelField, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 220, 190, 30));

        publisherDelField.setEditable(false);
        publisherDelField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        manageBooksPANEL.add(publisherDelField, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 260, 190, 30));

        genreDelField.setEditable(false);
        genreDelField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        manageBooksPANEL.add(genreDelField, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 300, 190, 30));

        idDelField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        idDelField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                idDelFieldKeyPressed(evt);
            }
        });
        manageBooksPANEL.add(idDelField, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 100, 190, 30));

        DELCLEARBTN.setBackground(new java.awt.Color(255, 255, 255));
        DELCLEARBTN.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        DELCLEARBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/es.png"))); // NOI18N
        DELCLEARBTN.setText("Clear");
        DELCLEARBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELCLEARBTNActionPerformed(evt);
            }
        });
        manageBooksPANEL.add(DELCLEARBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 430, 140, 40));

        DELETEBOOKBTN.setBackground(new java.awt.Color(255, 255, 255));
        DELETEBOOKBTN.setFont(new java.awt.Font("Dubai", 0, 18)); // NOI18N
        DELETEBOOKBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/tr1.png"))); // NOI18N
        DELETEBOOKBTN.setText("Delete Book");
        DELETEBOOKBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELETEBOOKBTNActionPerformed(evt);
            }
        });
        manageBooksPANEL.add(DELETEBOOKBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 430, 150, 40));

        BG3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/3.png"))); // NOI18N
        manageBooksPANEL.add(BG3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 420, 520));

        BG7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/3.png"))); // NOI18N
        manageBooksPANEL.add(BG7, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, 410, 520));

        BG8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/3.png"))); // NOI18N
        manageBooksPANEL.add(BG8, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 10, 420, 520));

        THREEPANELS.add(manageBooksPANEL, "manageBooksPANEL");

        jPanel1.add(THREEPANELS, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, 1290, 540));

        home.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        home.setForeground(new java.awt.Color(204, 0, 0));
        home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Librarysystem/home (1).png"))); // NOI18N
        home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeMouseClicked(evt);
            }
        });
        jPanel1.add(home, new org.netbeans.lib.awtextra.AbsoluteConstraints(1390, 150, 80, 90));

        jLabel18.setFont(new java.awt.Font("Dubai", 1, 35)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("MANAGE BOOKS");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 310, 60));
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -6, 1500, 910));

        BGGG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarysystem/BGJLABELUE.png"))); // NOI18N
        jPanel1.add(BGGG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -6, 1500, 910));

        INVIid.setEditable(false);
        jPanel1.add(INVIid, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 660, 80, -1));

        INVIname.setEditable(false);
        jPanel1.add(INVIname, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 660, 80, -1));

        INVIbday.setEditable(false);
        jPanel1.add(INVIbday, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 660, 80, -1));
        jPanel1.add(numberBetween, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 670, 120, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void browseGenreBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseGenreBTNActionPerformed
        cardLayout.show(THREEPANELS, "manageBooksPANEL");
    }//GEN-LAST:event_browseGenreBTNActionPerformed

    private void allBooksBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allBooksBTNActionPerformed
        cardLayout.show(THREEPANELS, "allBooksPANEL");
    }//GEN-LAST:event_allBooksBTNActionPerformed

    private void selectGENREItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_selectGENREItemStateChanged
        String genre = selectGENRE.getSelectedItem().toString();
        filterGenre(genre); //method sa pag filter ng genre
    }//GEN-LAST:event_selectGENREItemStateChanged

    private void deleteToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteToggleActionPerformed
        if (deleteToggle.isSelected()){
            addToggle.setEnabled(false);
            delToggleBTN.setEnabled(false);
            deleteToggle.setEnabled(true);
            isbnDELETE.setEnabled(true);
            titleDELETE.setEnabled(true);
            authorDELETE.setEnabled(true);
            yearDELETE.setEnabled(true);
            genreDELETE.setEnabled(true);
            copyDELETE.setEnabled(true);
            deleteBookBTN.setEnabled(true);
            clearDeleteBTN.setEnabled(true);
            searchDeleteBTN.setEnabled(true);
            publisherDELETE.setEnabled(true);
        }else{
            addToggle.setEnabled(true);
            delToggleBTN.setEnabled(true);
            isbnDELETE.setEnabled(false);
            titleDELETE.setEnabled(false);
            authorDELETE.setEnabled(false);
            yearDELETE.setEnabled(false);
            genreDELETE.setEnabled(false);
            publisherDELETE.setEnabled(false);
            copyDELETE.setEnabled(false);
            deleteBookBTN.setEnabled(false);
            clearDeleteBTN.setEnabled(false);
            searchDeleteBTN.setEnabled(false);
            
        }
    }//GEN-LAST:event_deleteToggleActionPerformed

    private void addToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToggleActionPerformed
    if (addToggle.isSelected()){
        deleteToggle.setEnabled(false);
        delToggleBTN.setEnabled(false);
        isbnADD.setEnabled(true);
        titleADD.setEnabled(true);
        authorADD.setEnabled(true);
        yearADD.setEnabled(true);
        genreADD.setEnabled(true);
        copyADD.setEnabled(true);
        addNewBTN.setEnabled(true);
        clearNewBTN.setEnabled(true);
        publisherADD.setEnabled(true);
    }else{
        deleteToggle.setEnabled(true);
        delToggleBTN.setEnabled(true);
        isbnADD.setEnabled(false);
        titleADD.setEnabled(false);
        authorADD.setEnabled(false);
        yearADD.setEnabled(false);
        genreADD.setEnabled(false);
        copyADD.setEnabled(false);
        addNewBTN.setEnabled(false);
        clearNewBTN.setEnabled(false);
        searchDeleteBTN.setEnabled(false);
        publisherADD.setEnabled(false);
    }
    }//GEN-LAST:event_addToggleActionPerformed

    private void yearADDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_yearADDKeyPressed
    String yearNew = yearADD.getText();
    int length = yearNew.length();
    char c = evt.getKeyChar();
    if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9'){
        if(length<4){
            yearADD.setEditable(true);
        }else{
            yearADD.setEditable(false);
        }
    }else{
        if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode()==KeyEvent.VK_DELETE){
            yearADD.setEditable(true);
        }else{
            yearADD.setEditable(false);
        }
    }
    }//GEN-LAST:event_yearADDKeyPressed

    private void isbnADDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_isbnADDKeyPressed
    String isbnNew = isbnADD.getText();
    int length = isbnNew.length();
    char c = evt.getKeyChar();
    if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9'){
        if(length<8){
            isbnADD.setEditable(true);
        }else{
            isbnADD.setEditable(false);
        }
    }else{
        if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode()==KeyEvent.VK_DELETE){
            isbnADD.setEditable(true);
        }else{
            isbnADD.setEditable(false);
        }
    }
    }//GEN-LAST:event_isbnADDKeyPressed

    private void clearNewBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearNewBTNActionPerformed
        isbnADD.setText(null);
        titleADD.setText(null);
        authorADD.setText(null);
        yearADD.setText(null);
        genreADD.setText(null);
        copyADD.setText(null);
        publisherADD.setText(null);
    }//GEN-LAST:event_clearNewBTNActionPerformed

    private void addNewBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewBTNActionPerformed
        if(isbnADD.getText().isEmpty() || titleADD.getText().isEmpty() || authorADD.getText().isEmpty() || yearADD.getText().isEmpty() || genreADD.getText().isEmpty() || copyADD.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please fill up all the fields first!", "Blank Field", JOptionPane.ERROR_MESSAGE);
            return;
        }int userConfirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to add this book?","New Book" ,JOptionPane.YES_NO_OPTION);
        if (userConfirm == 0){
            try{
                //con = DriverManager.getConnection("jdbc:derby://localhost:1527/LibraryManagementSystem", "group1", "librarysystem");
                String q = "INSERT INTO booksavailable (bookid, booktitle, authorname, publishedyear, genre, copies, publisher)values(?,?,?,?,?,?,?)";
                pst = con.prepareStatement(q);
                pst.setString(1, isbnADD.getText());
                pst.setString(2, titleADD.getText());
                pst.setString(3, authorADD.getText());
                pst.setString(4, yearADD.getText());
                pst.setString(5, genreADD.getText().toUpperCase());
                pst.setString(6, copyADD.getText());
                pst.setString(7, publisherADD.getText());
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "New Book Succefully Added.", "Add Successful", JOptionPane.INFORMATION_MESSAGE);
                autoUpdateTable();
            }catch (Exception e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_addNewBTNActionPerformed

    private void clearDeleteBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearDeleteBTNActionPerformed
    isbnDELETE.setText(null);
    titleDELETE.setText(null);
    authorDELETE.setText(null);
    yearDELETE.setText(null);
    genreDELETE.setText(null);
    copyDELETE.setText(null);
    publisherDELETE.setText(null);
    }//GEN-LAST:event_clearDeleteBTNActionPerformed

    private void deleteBookBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBookBTNActionPerformed
    if(isbnDELETE.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Please enter the Book ID first!", "Blank Field", JOptionPane.ERROR_MESSAGE);
        return;
    }   
    int yearToday = new Date().toInstant().atZone(ZoneId.systemDefault()).toLocalDate().getYear();
    int bookYear = Integer.parseInt(yearDELETE.getText());
    int differenceB = yearToday - bookYear;
       if (differenceB >= 15){
            int confirmDelete = JOptionPane.showConfirmDialog(null, "Are you sure you want to Archive this book?", "Archive Book",JOptionPane.YES_NO_OPTION);
        if (confirmDelete == 0){
            try{ 
                //con = DriverManager.getConnection("jdbc:derby://localhost:1527/LibraryManagementSystem", "group1", "librarysystem");
                String arBook= "INSERT INTO archivebook (bookid, booktitle, authorname, pubyear, bookpublisher, bookgenre, numbercopies) values (?,?,?,?,?,?,?)";
                pst = con.prepareStatement(arBook);
                pst.setString(1, isbnDELETE.getText());
                pst.setString(2, titleDELETE.getText());
                pst.setString(3, authorDELETE.getText());
                pst.setString(4, yearDELETE.getText());
                pst.setString(5, publisherDELETE.getText());
                pst.setString(6, genreDELETE.getText());
                pst.setString(7, copyDELETE.getText());
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Book Succefully Archived.", "Archived Successful", JOptionPane.INFORMATION_MESSAGE);
                String deleteFromInventory = "DELETE FROM booksavailable where bookid=?";
                pst = con.prepareStatement(deleteFromInventory);
                pst.setString(1,isbnDELETE.getText());
                pst.executeUpdate();
                autoUpdateTable();
            }catch (Exception e){
                e.printStackTrace();
            }
        }
        }else{
           JOptionPane.showMessageDialog(this, "This book's copyright hasn't exceed 15 years yet!", "Cannot Archive Book", JOptionPane.WARNING_MESSAGE);
           return;
       }
    }//GEN-LAST:event_deleteBookBTNActionPerformed

    private void searchDeleteBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchDeleteBTNActionPerformed
    if(isbnDELETE.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter the Book ID first!", "Blank Field", JOptionPane.ERROR_MESSAGE);
            return;
        }try{ //DATABASE CONNECTION
            //con = DriverManager.getConnection("jdbc:derby://localhost:1527/LibraryManagementSystem", "group1", "librarysystem");
            String q = "SELECT * FROM booksavailable WHERE bookid = ?";
            pst = con.prepareStatement(q);
            pst.setString(1, isbnDELETE.getText());
            rs = pst.executeQuery();
            if (rs.next()){
                titleDELETE.setText(rs.getString(2)); 
                authorDELETE.setText(rs.getString(3));
                yearDELETE.setText(rs.getString(4));
                genreDELETE.setText(rs.getString(5).toUpperCase());
                copyDELETE.setText(rs.getString(6));
                publisherDELETE.setText(rs.getString(7));
            }else{
                JOptionPane.showMessageDialog(null,"Book not found. Please try again.");
                return;
            }
        }catch (Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_searchDeleteBTNActionPerformed

    private void isbnDELETEKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_isbnDELETEKeyPressed
        String isbnDEL= isbnDELETE.getText();
        int length = isbnDEL.length();
        char c = evt.getKeyChar();
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9'){
            if(length<8){
                isbnDELETE.setEditable(true);
            }else{
                isbnDELETE.setEditable(false);
            }
        }else{
            if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode()==KeyEvent.VK_DELETE){
                isbnDELETE.setEditable(true);
            }else{
                isbnDELETE.setEditable(false);
            }
        }
    }//GEN-LAST:event_isbnDELETEKeyPressed

    private void homeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMouseClicked
    Admin_Module AdminFrame = new Admin_Module();
    Admin_Module.UserIDTxtField.setText(ManagedBooks.INVIid.getText());
    Admin_Module.NameTxtField.setText(ManagedBooks.INVIname.getText());
    Admin_Module.dateNgayonField.setText(ManagedBooks.INVIbday.getText());
    AdminFrame.setVisible(true);
    this.dispose();
    }//GEN-LAST:event_homeMouseClicked

    private void delToggleBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delToggleBTNActionPerformed
    if (delToggleBTN.isSelected()){
        addToggle.setEnabled(false);
        deleteToggle.setEnabled(false);
        idDelField.setEnabled(true);
        titleDelField.setEnabled(true);
        authorDelField.setEnabled(true);
        yearDelField.setEnabled(true);
        genreDelField.setEnabled(true);
        copyDelField.setEnabled(true);
        DELETEBOOKBTN.setEnabled(true);
        DELCLEARBTN.setEnabled(true);
        publisherDelField.setEnabled(true);
        searchDELETEBOOK.setEnabled(true);
    }else{
        deleteToggle.setEnabled(true);
        addToggle.setEnabled(true);
        idDelField.setEnabled(false);
        titleDelField.setEnabled(false);
        authorDelField.setEnabled(false);
        yearDelField.setEnabled(false);
        genreDelField.setEnabled(false);
        copyDelField.setEnabled(false);
        DELETEBOOKBTN.setEnabled(false);
        DELCLEARBTN.setEnabled(false);
        publisherDelField.setEnabled(false);
        searchDELETEBOOK.setEnabled(false);
    }
    }//GEN-LAST:event_delToggleBTNActionPerformed

    private void idDelFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idDelFieldKeyPressed
    String delBookNum= idDelField.getText();
    int length = delBookNum.length();
    char c = evt.getKeyChar();
    if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9'){
        if(length<10){
             idDelField.setEditable(true);
        }else{
             idDelField.setEditable(false);
        }
    }else{
        if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode()==KeyEvent.VK_DELETE){
             idDelField.setEditable(true);
        }else{
             idDelField.setEditable(false);
        }
    }
    }//GEN-LAST:event_idDelFieldKeyPressed

    private void DELCLEARBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELCLEARBTNActionPerformed
   idDelField.setText(null);
   titleDelField.setText(null);
   authorDelField.setText(null);
   yearDelField.setText(null);   
   publisherDelField.setText(null);
   genreDelField.setText(null);   
   copyDelField.setText(null);   
    }//GEN-LAST:event_DELCLEARBTNActionPerformed

    private void DELETEBOOKBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELETEBOOKBTNActionPerformed
    if (idDelField.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Please fill up all the fields first!", "Blank Field", JOptionPane.ERROR_MESSAGE);
        return;
    }
    int confirmDelete = JOptionPane.showConfirmDialog(null, "Are you sure you want to Delete this book?", "Delete Book",JOptionPane.YES_NO_OPTION);
        if (confirmDelete == 0){
            try{ 
                //con = DriverManager.getConnection("jdbc:derby://localhost:1527/LibraryManagementSystem", "group1", "librarysystem");
                String arBook= "DELETE FROM booksavailable where bookid=?";
                pst = con.prepareStatement(arBook);
                pst.setString(1, idDelField.getText());
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Book Succefully Deleted.", "Book Deleted Successful", JOptionPane.INFORMATION_MESSAGE);
                autoUpdateTable();
            }catch (HeadlessException | SQLException e){
            }
        }
    }//GEN-LAST:event_DELETEBOOKBTNActionPerformed

    private void searchDELETEBOOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchDELETEBOOKActionPerformed
    if(idDelField.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter the Book ID first!", "Blank Field", JOptionPane.ERROR_MESSAGE);
            return;
    }
        try{
            //con = DriverManager.getConnection("jdbc:derby://localhost:1527/LibraryManagementSystem", "group1", "librarysystem");
            String q = "SELECT * FROM booksavailable WHERE bookid = ?";
            pst = con.prepareStatement(q);
            pst.setString(1, idDelField.getText());
            rs = pst.executeQuery();
            if (rs.next()){
                titleDelField.setText(rs.getString(2)); 
                authorDelField.setText(rs.getString(3));
                yearDelField.setText(rs.getString(4));
                genreDelField.setText(rs.getString(5).toUpperCase());
                copyDelField.setText(rs.getString(6));
                publisherDelField.setText(rs.getString(7));
            }else{
                JOptionPane.showMessageDialog(null,"Book not found. Please try again.");
                return;
            }
        }catch (Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_searchDELETEBOOKActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagedBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagedBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagedBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagedBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagedBooks().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BG3;
    private javax.swing.JLabel BG7;
    private javax.swing.JLabel BG8;
    private javax.swing.JLabel BGGG;
    private javax.swing.JButton DELCLEARBTN;
    private javax.swing.JButton DELETEBOOKBTN;
    public static javax.swing.JTextField INVIbday;
    public static javax.swing.JTextField INVIid;
    public static javax.swing.JTextField INVIname;
    private javax.swing.JPanel THREEPANELS;
    private javax.swing.JButton addNewBTN;
    private javax.swing.JToggleButton addToggle;
    private javax.swing.JButton allBooksBTN;
    private javax.swing.JPanel allBooksPANEL;
    private javax.swing.JTextField authorADD;
    private javax.swing.JTextField authorDELETE;
    private javax.swing.JTextField authorDelField;
    private javax.swing.JButton browseGenreBTN;
    private javax.swing.JButton clearDeleteBTN;
    private javax.swing.JButton clearNewBTN;
    private javax.swing.JTextField copyADD;
    private javax.swing.JTextField copyDELETE;
    private javax.swing.JTextField copyDelField;
    private javax.swing.JToggleButton delToggleBTN;
    private javax.swing.JButton deleteBookBTN;
    private javax.swing.JToggleButton deleteToggle;
    private javax.swing.JTextField genreADD;
    private javax.swing.JTextField genreDELETE;
    private javax.swing.JTextField genreDelField;
    private javax.swing.JLabel home;
    private javax.swing.JTextField idDelField;
    private javax.swing.JTextField isbnADD;
    private javax.swing.JTextField isbnDELETE;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable listOfBooksTABLE;
    private javax.swing.JPanel manageBooksPANEL;
    private javax.swing.JTextField numberBetween;
    private javax.swing.JTextField publisherADD;
    private javax.swing.JTextField publisherDELETE;
    private javax.swing.JTextField publisherDelField;
    private javax.swing.JButton searchDELETEBOOK;
    private javax.swing.JButton searchDeleteBTN;
    private javax.swing.JComboBox<String> selectGENRE;
    private javax.swing.JTextField titleADD;
    private javax.swing.JTextField titleDELETE;
    private javax.swing.JTextField titleDelField;
    private javax.swing.JTextField yearADD;
    private javax.swing.JTextField yearDELETE;
    private javax.swing.JTextField yearDelField;
    // End of variables declaration//GEN-END:variables
}
